## repository <IP> <port> <Agent Name>
#############################################
repository localhost 1099 inspectIT

## method-sensor-type <name> <fully-qualified-name> <priority> [<additional options>]
#####################################################################################
# method-sensor-type average-timer info.novatec.inspectit.agent.sensor.method.averagetimer.AverageTimerSensor HIGH
method-sensor-type timer info.novatec.inspectit.agent.sensor.method.timer.TimerSensor MAX
method-sensor-type isequence info.novatec.inspectit.agent.sensor.method.invocationsequence.InvocationSequenceSensor INVOC
method-sensor-type jdbc-connection info.novatec.inspectit.agent.sensor.method.jdbc.ConnectionSensor MIN
method-sensor-type jdbc-prepared-statement info.novatec.inspectit.agent.sensor.method.jdbc.PreparedStatementSensor MIN
method-sensor-type jdbc-prepared-statement-parameter info.novatec.inspectit.agent.sensor.method.jdbc.PreparedStatementParameterSensor MIN
method-sensor-type jdbc-statement info.novatec.inspectit.agent.sensor.method.jdbc.StatementSensor MIN

## platform-sensor-type <fully-qualified-name> [<additional options>]
#####################################################################
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.ClassLoadingInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.CompilationInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.MemoryInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.CpuInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.RuntimeInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.SystemInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.ThreadInformation

## send-strategy <fully-qualified-name> 
#######################################
send-strategy info.novatec.inspectit.agent.sending.impl.TimeStrategy time=5000
# send-strategy info.novatec.inspectit.agent.sending.impl.ListSizeStrategy size=10

## buffer-strategy <fully-qualified-name> 
#########################################
#buffer-strategy info.novatec.inspectit.agent.buffer.impl.SimpleBufferStrategy
buffer-strategy info.novatec.inspectit.agent.buffer.impl.SizeBufferStrategy size=12

## SQL Tracing (generic)
########################
# SQL Connection
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String,int) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String,int[]) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String,int,int) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String,int,int,int) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareStatement(java.lang.String,String[]) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareCall(java.lang.String) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareCall(java.lang.String,int,int) JDBC:Connection interface=true
sensor jdbc-connection java.sql.Connection prepareCall(java.lang.String,int,int,int) JDBC:Connection interface=true
# WebLogic SQL Connection
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String,int) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String,int[]) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String,int,int) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String,int,int,int) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareStatement(java.lang.String,String[]) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareCall(java.lang.String) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareCall(java.lang.String,int,int) JDBC:Connection interface=true
sensor jdbc-connection weblogic.jdbc.wrapper.Connection prepareCall(java.lang.String,int,int,int) JDBC:Connection interface=true
# SQL Prepared Statement
sensor jdbc-prepared-statement java.sql.PreparedStatement <init> JDBC:Prepared interface=true
sensor jdbc-prepared-statement java.sql.PreparedStatement executeQuery() JDBC:Prepared interface=true
sensor jdbc-prepared-statement java.sql.PreparedStatement executeUpdate() JDBC:Prepared interface=true
sensor jdbc-prepared-statement java.sql.PreparedStatement execute() JDBC:Prepared interface=true
sensor jdbc-prepared-statement java.sql.Statement executeBatch() JDBC:Prepared interface=true
# PostgreSQL Prepared Statement
sensor jdbc-prepared-statement org.postgresql.jdbc2.AbstractJdbc2Statement executeQuery() JDBC:Prepared
sensor jdbc-prepared-statement org.postgresql.jdbc2.AbstractJdbc2Statement executeUpdate() JDBC:Prepared
sensor jdbc-prepared-statement org.postgresql.jdbc2.AbstractJdbc2Statement execute() JDBC:Prepared
# SQL Prepared Statement Parameter Replacement
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setBigDecimal(int,java.math.BigDecimal) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setBoolean(int,boolean) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setByte(int,byte) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setDate(int,java.sql.Date) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setDouble(int,double) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setFloat(int,float) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setInt(int,int) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setLong(int,long) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setShort(int,short) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setString(int,java.lang.String) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setTime(int,java.sql.Time) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setTimestamp(int,java.sql.Timestamp) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setObject(int,java.lang.Object) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement setArray(int,java.sql.Array) JDBC:PreparedParameter interface=true
#sensor jdbc-prepared-statement-parameter java.sql.PreparedStatement clearParameters() JDBC:PreparedParameter interface=true
# SQL Statement
sensor jdbc-statement java.sql.Statement execute(java.lang.String) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement execute(java.lang.String,int) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement execute(java.lang.String,int[]) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement execute(java.lang.String,java.lang.String[]) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement executeUpdate(java.lang.String) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement executeUpdate(java.lang.String,int) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement executeUpdate(java.lang.String,int[]) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement executeUpdate(java.lang.String,java.lang.String[]) JDBC:Statement interface=true
sensor jdbc-statement java.sql.Statement executeQuery(java.lang.String) JDBC:Statement interface=true

## EXAMPLES
###########
# sensor timer novatec.SubTest msg(java.lang.String) TimerTest
# sensor timer novatec.Sub* msg(int) PrimitiveTest
# sensor timer novatec.SubTest msg(*String) Test
# sensor timer novatec.Sub* m*(java.lang.String,*String) %classname%:%methodname%(%parametertypes%)
# sensor timer novatec.ITest * InterfaceTest interface=true
# sensor timer nova*.Te* m*(*String) %classname%:%methodname%(%parametertypes%) superclass=true

# sensor timer info.novatec.inspectitsamples.calculator.Calculator * Calculator/%methodname%
# sensor timer info.novatec.inspectitsamples.calculator.Calculator substract(double,double) Calculator/substract
# sensor timer info.novatec.inspectitsamples.calculator.Calculator divide(double,double) Calculator/divide
# sensor timer info.novatec.inspectitsamples.calculator.Calculator multiply(double,double) Calculator/multiply

## The following aren't working properly (for java classes), just added to show the usage of the superclass/interface option
# sensor timer java.lang.Object * Object superclass=true
# sensor timer java.util.List size() ListSize interface=true

## For parameter catching: p=parameter of the method | f=field of the class/instance
# sensor isequence info.novatec.inspectitsamples.calculator.Calculator actionPerformed test p=0;Source; f=LastOperator;lastOperator f=LastOutput;jlbOutput.text

## For constructors:
# sensor timer info.novatec.inspectitsamples.calculator.Calculator <init> Constructor

## You can include additional sensor configuration files (e.g. for separation or easier (de-)activation) like this
## If no absolute path is specified, the folder containing this file will be taken as the root!
# $include sensors.cfg
# $include api1.cfg
# $include api2.cfg
# $include /my/path/to/the/configuration/ui-sensors.cfg

## Your Sensor Definitions
##########################
# sensor <sensor-type-name> <class-to-monitor> <method-to-monitor> <sensor-name> [<additional options>]