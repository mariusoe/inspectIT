<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byType">

	<!-- needed for the automatic AOP usage -->
	<bean id="advisorFactory" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<bean id="interfaceInterceptor" class="info.novatec.inspectit.rcp.repository.service.cmr.proxy.ServiceInterfaceDelegateInterceptor" />

	<bean id="serviceMethodInterceptor" class="info.novatec.inspectit.rcp.repository.service.cmr.proxy.ServiceMethodInterceptor" />

	<bean id="cachingPlatformIdentInterceptor" class="info.novatec.inspectit.rcp.repository.service.cmr.proxy.CachingPlatformIdentInterceptor" />

	<bean id="cachingPlatformAdvice" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice" ref="cachingPlatformIdentInterceptor" />
		<property name="pattern" value=".*Proxy.*getCompleteAgent.*" />
	</bean>

	<bean id="cmrServiceProvider" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrServiceProvider">
		<lookup-method name="getCmrManagementService" bean="cmrManagementService" />
		<lookup-method name="getExceptionDataAccessService" bean="exceptionDataAccessService" />
		<lookup-method name="getGlobalDataAccessService" bean="globalDataAccessService" />
		<lookup-method name="getInvocationDataAccessService" bean="invocationDataAccessService" />
		<lookup-method name="getServerStatusService" bean="serverStatusService" />
		<lookup-method name="getSqlDataAccessService" bean="sqlDataAccessService" />
		<lookup-method name="getTimerDataAccessService" bean="timerDataAccessService" />
		<lookup-method name="getHttpTimerDataAccessService" bean="httpTimerDataAccessService" />
		<lookup-method name="getStorageService" bean="storageService" />
	</bean>

	<!-- CmrManagementService -->
	<bean id="cmrManagementService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.ICmrManagementService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="cmrManagementServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="cmrManagementServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.ICmrManagementService" />
		<property name="serviceName" value="CmrManagementService" />
	</bean>
	<!-- BufferService End -->

	<!-- ExceptionDataAccessService -->
	<bean id="exceptionDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IExceptionDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="exceptionDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="exceptionDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IExceptionDataAccessService" />
		<property name="serviceName" value="ExceptionDataAccessService" />
	</bean>
	<!-- ExceptionDataAccessService End -->

	<!-- GlobalDataAccessService -->
	<bean id="globalDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IGlobalDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="globalDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="globalDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IGlobalDataAccessService" />
		<property name="serviceName" value="GlobalDataAccessService" />
	</bean>
	<!-- GlobalDataAccessService End -->

	<!-- InvocationDataAccessService -->
	<bean id="invocationDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IInvocationDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="invocationDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="invocationDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IInvocationDataAccessService" />
		<property name="serviceName" value="InvocationDataAccessService" />
	</bean>
	<!-- InvocationDataAccessService End -->

	<!-- ServerStatusService -->
	<bean id="serverStatusService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IServerStatusService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="serverStatusServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="serverStatusServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IServerStatusService" />
		<property name="serviceName" value="ServerStatusService" />
	</bean>
	<!-- ServerStatusService End -->

	<!-- SqlDataAccessService -->
	<bean id="sqlDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.ISqlDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="sqlDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="sqlDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.ISqlDataAccessService" />
		<property name="serviceName" value="SqlDataAccessService" />
	</bean>
	<!-- SqlDataAccessService End -->

	<!--TimerDataAccessService -->
	<bean id="timerDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.ITimerDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="timerDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="timerDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.ITimerDataAccessService" />
		<property name="serviceName" value="TimerDataAccessService" />
	</bean>
	<!--TimerDataAccessService End -->

	<!-- HttpTimerDataAccessService -->
	<bean id="httpTimerDataAccessService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IHttpTimerDataAccessService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="httpTimerDataAccessServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="httpTimerDataAccessServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IHttpTimerDataAccessService" />
		<property name="serviceName" value="HttpTimerDataAccessService" />
	</bean>
	<!-- HttpTimerDataAccessService End -->

	<!-- StorageService -->
	<bean id="storageService" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype" lazy-init="true">
		<property name="proxyInterfaces">
			<list>
				<value>info.novatec.inspectit.cmr.service.IStorageService</value>
				<value>info.novatec.inspectit.rcp.repository.service.cmr.ICmrService</value>
			</list>
		</property>
		<property name="target" ref="storageServiceTarget" />
		<property name="interceptorNames">
			<list>
				<value>serviceMethodInterceptor</value>
				<value>interfaceInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="storageServiceTarget" class="info.novatec.inspectit.rcp.repository.service.cmr.CmrService" scope="prototype" lazy-init="true">
		<property name="serviceInterface" value="info.novatec.inspectit.cmr.service.IStorageService" />
		<property name="serviceName" value="StorageService" />
	</bean>
	<!-- StorageService End -->

	<bean id="loggerPostProcessor" class="info.novatec.inspectit.spring.logger.LoggerPostProcessor" />

	<bean id="storageIndexQuery" class="info.novatec.inspectit.indexing.storage.impl.StorageIndexQuery" scope="prototype" lazy-init="true" />

	<bean id="storageIndexQueryProvider" class="info.novatec.inspectit.indexing.query.provider.impl.StorageIndexQueryProvider">
		<lookup-method name="createNewStorageIndexQuery" bean="storageIndexQuery" />
	</bean>

	<bean id="restrictionProcessor" class="info.novatec.inspectit.indexing.restriction.impl.CachingIndexQueryRestrictionProcessor" />

	<bean id="classSchemaManager" class="info.novatec.inspectit.storage.serializer.schema.ClassSchemaManager">
		<property name="schemaListFile" value="classpath:schema/schemaList.txt" />
	</bean>

	<bean id="serializationManager" class="info.novatec.inspectit.storage.serializer.impl.SerializationManager" scope="prototype" lazy-init="true" />

	<bean id="byteBufferProvider" class="info.novatec.inspectit.storage.nio.ByteBufferProvider" init-method="init">
		<property name="poolMaxCapacity" value="52428800" />
		<property name="poolMinCapacity" value="10485760" />
		<property name="bufferPoolMaxDirectMemoryOccupancy" value="0.6" />
		<property name="bufferPoolMinDirectMemoryOccupancy" value="0.3" />
	</bean>

	<bean id="storageManager" class="info.novatec.inspectit.rcp.storage.InspectITStorageManager">
		<property name="storageDefaultFolder" value="storage"></property>
	</bean>

	<bean id="timerDataQueryFactory" class="info.novatec.inspectit.indexing.query.factory.impl.TimerDataQueryFactory" />
	<bean id="sqlStatementDataQueryFactory" class="info.novatec.inspectit.indexing.query.factory.impl.SqlStatementDataQueryFactory" />
	<bean id="httpTimerDataQueryFactory" class="info.novatec.inspectit.indexing.query.factory.impl.HttpTimerDataQueryFactory" />
	<bean id="invocationSequenceDataQueryFactory" class="info.novatec.inspectit.indexing.query.factory.impl.InvocationSequenceDataQueryFactory" />
	<bean id="exceptionSensorDataQueryFactory" class="info.novatec.inspectit.indexing.query.factory.impl.ExceptionSensorDataQueryFactory" />

	<bean id="dataRetriever" class="info.novatec.inspectit.rcp.storage.util.DataRetriever" init-method="init" />

	<bean id="dataUploader" class="info.novatec.inspectit.rcp.storage.util.DataUploader" />

	<bean id="storageRepositoryDefinition" class="info.novatec.inspectit.rcp.repository.StorageRepositoryDefinition" scope="prototype" lazy-init="true" />

	<bean id="storageRepositoryDefinitionProvider" class="info.novatec.inspectit.rcp.repository.StorageRepositoryDefinitionProvider">
		<lookup-method name="createStorageRepositoryDefinition" bean="storageRepositoryDefinition" />
	</bean>

	<bean id="storageTimerDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageTimerDataAccessService" scope="prototype" lazy-init="true">
		<property name="timerDataQueryFactory" ref="timerDataQueryFactory" />
	</bean>

	<bean id="storageHttpTimerDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageHttpTimerDataAccessService" scope="prototype" lazy-init="true">
		<property name="httpDataQueryFactory" ref="httpTimerDataQueryFactory" />
	</bean>

	<bean id="storageSqlDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageSqlDataAccessService" scope="prototype" lazy-init="true">
		<property name="sqlDataQueryFactory" ref="sqlStatementDataQueryFactory" />
	</bean>

	<bean id="storageExceptionDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageExceptionDataAccessService" scope="prototype" lazy-init="true">
		<property name="exceptionSensorDataQueryFactory" ref="exceptionSensorDataQueryFactory" />
	</bean>

	<bean id="storageInvocationDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageInvocationDataAccessService" scope="prototype" lazy-init="true">
		<property name="invocationDataQueryFactory" ref="invocationSequenceDataQueryFactory" />
	</bean>

	<bean id="storageGlobalDataAccessService" class="info.novatec.inspectit.rcp.repository.service.storage.StorageGlobalDataAccessService" scope="prototype" lazy-init="true" />
	<!-- add the provider here directly -->

	<bean id="storageServiceProvider" class="info.novatec.inspectit.rcp.repository.service.storage.StorageServiceProvider">
		<lookup-method name="createStorageTimerDataAccessService" bean="storageTimerDataAccessService" />
		<lookup-method name="createStorageHttpTimerDataAccessService" bean="storageHttpTimerDataAccessService" />
		<lookup-method name="createStorageSqlDataAccessService" bean="storageSqlDataAccessService" />
		<lookup-method name="createStorageExceptionDataAccessService" bean="storageExceptionDataAccessService" />
		<lookup-method name="createStorageInvocationDataAccessService" bean="storageInvocationDataAccessService" />
		<lookup-method name="createStorageGlobalDataAccessService" bean="storageGlobalDataAccessService" />
	</bean>

	<bean id="IOExecutorService" class="info.novatec.inspectit.storage.util.ExecutorServiceFactory">
		<property name="executorThreads" value="2" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="storageExecutorService" class="info.novatec.inspectit.storage.util.ExecutorServiceFactory">
		<property name="executorThreads" value="3" />
		<property name="scheduledExecutor" value="true" />
	</bean>

	<bean id="readingChannelManager" class="info.novatec.inspectit.storage.nio.read.ReadingChannelManager" depends-on="IOExecutorService">
		<property name="executorService">
			<ref bean="IOExecutorService" />
		</property>
	</bean>

	<bean id="extendedByteBufferInputStream" class="info.novatec.inspectit.storage.nio.stream.ExtendedByteBufferInputStream" scope="prototype" lazy-init="true">
		<property name="executorService" ref="storageExecutorService" />
	</bean>

	<bean id="streamProvider" class="info.novatec.inspectit.storage.nio.stream.StreamProvider">
		<lookup-method name="createExtendedByteBufferInputStream" bean="extendedByteBufferInputStream" />
	</bean>

	<bean id="serializationManagerProvider" class="info.novatec.inspectit.storage.serializer.provider.SerializationManagerProvider">
		<lookup-method name="createSerializer" bean="serializationManager" />
	</bean>
	
	<bean id="serializationManagerPostProcessor" class="info.novatec.inspectit.storage.serializer.SerializationManagerPostProcessor"/>
</beans>
